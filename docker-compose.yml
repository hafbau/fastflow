version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: flowstack-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=flowstack_admin
      - POSTGRES_PASSWORD=ChangeMe123!@#
      - POSTGRES_DB=flowstack
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flowstack_admin -d flowstack"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  flowstack:
    build:
      context: .
      dockerfile: Dockerfile
    image: leadevs/fastflow:latest
    ports:
      - "3000:3000"
    volumes:
      - flowstack_data:/root/.flowise
    environment:
      # Flowise Core Configuration
      - FLOWISE_USERNAME=${FLOWISE_USERNAME:-hafiz@leadevs.com}
      - FLOWISE_PASSWORD=${FLOWISE_PASSWORD:-Password1@#}
      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=flowstack
      - DATABASE_USER=flowstack_admin
      - DATABASE_PASSWORD=ChangeMe123!@#
      - DATABASE_SSL=false
      - PORT=3000
      
      # FlowStack Proxy Configuration
      - CORE_SERVER_URL=http://localhost:3001
      - CORE_UI_URL=http://localhost:8080
      - PROXY_PORT=3000
      
      # Optional: API Keys and other configurations
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Utility service to reset database (run with: docker-compose run --rm db-reset)
  db-reset:
    image: postgres:15-alpine
    container_name: flowstack-db-reset
    environment:
      - PGPASSWORD=ChangeMe123!@#
    command: >
      sh -c "
        echo 'Dropping and recreating database...';
        psql -h postgres -U flowstack_admin -d postgres -c 'DROP DATABASE IF EXISTS flowstack;';
        psql -h postgres -U flowstack_admin -d postgres -c 'CREATE DATABASE flowstack;';
        echo 'Database reset complete!';
      "
    depends_on:
      postgres:
        condition: service_healthy
    profiles:
      - tools

volumes:
  flowstack_data:
    driver: local
  postgres_data:
    driver: local 